{"version":3,"sources":["configs/index.ts","apis/webApi.ts","apis/attributes.ts","apis/categories.ts","apis/products.ts","utils/index.ts","models/actions/ActionTypes.ts","models/actions/index.ts","apis/customer.ts","components/CompColorPicker.tsx","components/CompQuantityInput.tsx","components/CompSizePicker.tsx","components/CompCartDialog.tsx","components/CompFooterNav.tsx","components/CompLoginDialog.tsx","components/CompRegisterDialog.tsx","components/CompTopNavBar.tsx","components/CompJumboTronCard.tsx","components/CompProductCard.tsx","components/CompProductPromotionCard.tsx","routers/HomePage.tsx","components/CompProductReviewEntry.tsx","components/CompProductReviewForm.tsx","components/CompProductReviewSession.tsx","routers/ProductPage.tsx","components/CompPaginationBar.tsx","routers/SearchPage.tsx","App.tsx","models/reducers/index.ts","models/reducers/Cart.ts","models/reducers/Categories.ts","models/reducers/Customer.ts","models/reducers/Products.ts","models/reducers/Dialogs.ts","models/dataStore.ts","serviceWorker.ts","index.tsx","models/DataProvider.tsx"],"names":["API_ENDPOINT","CDN_ROOT","API_REQUEST_TIMEOUT","api","WebApi","_this","this","Object","classCallCheck","loginChain","token","axios","loginResolve","Axios","create","baseURL","timeout","Promise","resolve","createClass","key","value","_this2","defaults","headers","common","path","payload","arguments","length","undefined","usecache","cacheTimeout","url","concat","qs","stringify","cache","storeCache","get","expire","Date","now","data","then","res","set","clearAll","each","val","startsWith","remove","inValidateCache","post","put","_this3","_this4","_this5","apiGetAttributes","apiGetAttributeById","id","result","pop","apiGetAttributeValueById","apiGetAttributesByProductId","apiGetCategories","page","limit","apiGetCategoryById","apiGetCategoriesByProductId","apiGetCategoriesByDepartmentId","apiGetProducts","descriptionLength","description_length","apiSearchProducts","query","allWords","query_string","all_words","apiGetProductById","apiGetProductByCategoryId","apiGetProductByDepartmentId","apiGetProductDetailById","apiGetProductLocationsById","apiGetProductReviewsById","apiPostProductReviewsById","productId","review","rating","authPost","isValidEmail","email","match","GET_DEPARTMENTS","GET_CATEGORIES","GET_PRODUCT_CATEGORIES","GET_PRODUCTS","GET_PRODUCT_DETAILS","GET_PRODUCT_ATTRIBUTES","GET_PRODUCT_REVIEWS","MODAL_DIALOG","CUSTOMER_LOGIN","CUSTOMER_LOGOUT","ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_CART_ITEM","CHECKOUT_CART","actionGetProducts","dispatch","type","ActionTypes","params","isFetching","productApis","success","catch","error","actionGetProductReviews","actionPostProductReviews","isAuthorized","actionShowDialog","name","props","objectSpread","show","actionHideDialog","actionCustomerLogOut","auth","actionCustomerLogin","password","requesting","reject","apiCustomerLogin","accessToken","user","actionCustomerRegister","apiRegisterCustomer","actionAddCartItem","product","attributes","quantity","actionRemoveCartItem","itemId","actionUpdateCartItemQuantity","actionCartCheckout","CompColorPicker","possibleConstructorReturn","getPrototypeOf","call","colorChangeHandler","color","activeColor","state","onColorChange","setState","colors","react_default","a","createElement","className","map","Button","style","width","height","backgroundColor","padding","border","boxShadow","onClick","React","Component","CompQuantityInput","_props$value","clear","_this$props","_this$props$min","min","_this$props$max","max","_this$props$step","step","onChange","_this$state","ButtonToolbar","aria-label","ButtonGroup","variant","Math","Remove_default","outline","toString","_onChange","_x","apply","e","parseInt","target","isNaN","preventDefault","Add_default","CompSizePicker","sizeChangeHandler","size","activeSize","onSizeChange","sizes","connect","_ref","Dialogs","cart","_ref$show","_ref$message","message","_ref$error","_ref$requesting","Cart","Customer","withSnackbar","_props$cart","items","total","Modal","aria-labelledby","centered","onHide","Header","closeButton","Title","keys","Body","Container","Row","Col","as","md","item","Media","src","image","alt","CompSizePicker_CompSizePicker","filter","s","attribute_name","attribute_value","CompColorPicker_CompColorPicker","CompQuantityInput_CompQuantityInput","subtotal","toFixed","Footer","disabled","enqueueSnackbar","CompFooterNav","href","login","index_es","Form","onSubmit","stopPropagation","formData","FormData","currentTarget","param","remember","Group","controlId","Control","placeholder","Check","readOnly","label","Text","register","reTypePassword","Navbar","bg","collapseOnSelect","expand","Link","to","Collapse","Nav","IconButton_default","Search_default","Badge_default","badgeContent","ShoppingCart_default","Toggle","aria-controls","CompJumboTronCard","Card","CompProductCard","_props$product","thumbnail","price","discounted_price","haveDiscounted","parseFloat","Img","ImgOverlay","es_Badge","product_id","CompProductPromotionCard","description","HomePage","products","react","Jumbotron","promotion","CardDeck","rows","slice","Products","CompProductReviewEntry","react_rating_default","readonly","initialRating","emptySymbol","StarBorder_default","fullSymbol","Star_default","human","created_on","control","icon","FavoriteBorder_default","checkedIcon","Favorite_default","CompProductReviewForm","defaultRating","method","toISOString","reset","Label","column","required","minlength","productReviews","ProductPage","addCartItem","productDetail","preventDuplicate","quantityChangeHandler","productImageChangeHandler","productImage","setTimeout","productAtrributes","colorAttributeValue","find","attr","attrColor","sizeAttributeValue","attrSize","actionGetProductDetail","categoryApis","actionGetProductCategories","attributeApis","actionGetProductAttributes","productCategories","categories","catName","image_2","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Breadcrumb","Item","active","availableColors","availableSizes","img","margin","components_CompProductReviewSession","Categories","CompPaginationBar","pageCount","ceil","count","showCount","Array","from","leftEllipsis","rightEllipsis","splice","Pagination","First","onPage","p","index","Ellipsis","Last","SearchPage","array","chunkLength","chunks","i","push","arrayChunks","App","actionGetCategories","prevProps","location","window","scrollTo","components_CompTopNavBar","Route","exact","component","components_CompLoginDialog","components_CompRegisterDialog","components_CompCartDialog","withRouter","rootReducer","combineReducers","action","JSON","newState","forEach","categoriesDict","fetchingCount","category","category_id","cat","objectWithoutProperties","dialogProps","defineProperty","dataStore","createStore","composeWithDevTools","applyMiddleware","reduxThunk","reduxPromise","Boolean","hostname","ReactDOM","render","es","store","children","BrowserRouter","build","anchorOrigin","vertical","horizontal","autoHideDuration","maxSnack","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68ff691f.chunk.js","sourcesContent":["export const API_ENDPOINT = 'https://backendapi.turing.com';\nexport const CDN_ROOT = 'https://backendapi.turing.com/images/products/';\nexport const API_REQUEST_TIMEOUT = 10000; // 10s\nexport const API_CACHE_TIMEOUT = 3600000; // 1h\n","import Axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport qs from 'qs';\nimport storeCache from 'store';\nimport { API_CACHE_TIMEOUT, API_ENDPOINT, API_REQUEST_TIMEOUT } from '../configs';\n\nexport class WebApi {\n  public loginChain: Promise<any>;\n  private token: string;\n  private axios: AxiosInstance;\n  private loginResolve: () => void;\n\n  constructor () {\n    this.token = '';\n    this.axios = Axios.create({\n      baseURL: API_ENDPOINT,\n      timeout: API_REQUEST_TIMEOUT\n    });\n    this.loginResolve = () => '';\n    this.loginChain = new Promise((resolve) => {\n      this.loginResolve = resolve;\n    });\n  }\n\n  public auth (token: string) {\n    this.token = token;\n    this.axios.defaults.headers.common['user-key'] = token;\n    if (token) {\n      this.loginResolve();\n      this.loginResolve = () => '';\n      this.loginChain = Promise.resolve(token);\n    } else {\n      this.loginChain = new Promise((resolve) => {\n        this.loginResolve = resolve;\n      });\n    }\n  }\n\n  public isAuthorized () {\n    return !!this.token;\n  }\n\n  public get (\n    path: string,\n    payload = null as any,\n    usecache = true,\n    cacheTimeout = API_CACHE_TIMEOUT\n  ): Promise<any> {\n    const url = `${path}?${qs.stringify(payload)}`;\n    if (usecache) {\n      const cache = storeCache.get(url);\n      if (cache && cache.expire > Date.now()) {\n        return Promise.resolve(cache.data);\n      }\n    }\n    return this.axios\n      .get(url)\n      .then((res) => res.data)\n      .then((data) => {\n        if (usecache) {\n          storeCache.set(url, {\n            data,\n            expire: Date.now() + cacheTimeout\n          });\n        }\n        return data;\n      });\n  }\n\n  public inValidateCache (path = ''): void {\n    if (!path) {\n      storeCache.clearAll();\n    }\n    storeCache.each((val, key) => {\n      if (key.startsWith(path)) {\n        storeCache.remove(key);\n      }\n    });\n  }\n\n  public post (path: string, payload: any): Promise<any> {\n    // Clear cache under this path to ensure recieve latest data from the get api.\n    this.inValidateCache(path);\n    return this.axios.post(path, payload).then((res: AxiosResponse): any => res.data || res);\n  }\n\n  public put (path: string, payload: any): Promise<any> {\n    this.inValidateCache(path);\n    return this.axios.put(path, payload).then((res: AxiosResponse): any => res.data || res);\n  }\n\n  // authGet method  would check if user already logged in before exec the api call.\n  public authGet (\n    path: string,\n    payload = null as any,\n    usecache = true,\n    cacheTimeout = API_CACHE_TIMEOUT\n  ): Promise<any> {\n    return this.loginChain.then(() => this.get(path, payload, usecache, cacheTimeout));\n  }\n\n  public authPost (path: string, payload: any): Promise<any> {\n    return this.loginChain.then(() => this.post(path, payload));\n  }\n\n  public authPut (path: string, payload: any): Promise<any> {\n    return this.loginChain.then(() => this.put(path, payload));\n  }\n}\n\nconst api = new WebApi();\nif (process.env.NODE_ENV === 'development') {\n  (window as any).api = api;\n}\n\nexport default api;\n","import { IAttribute, IAttributeProductValue, IAttributeValue } from '../models/schemas';\nimport api from './webApi';\n\nexport function apiGetAttributes (): Promise<IAttribute[]> {\n  return api.get('/attributes');\n}\n\nexport function apiGetAttributeById (id: number): Promise<IAttribute> {\n  // According to https://backendapi.turing.com/docs/#/attributes/get_attributes__attribute_id_,\n  // The result the API is an array. It should return an object of attribute instead.\n  // TODO: double check with backend team for this case.\n  return api.get(`/attributes/${id}`).then((result) => result.pop());\n}\n\nexport function apiGetAttributeValueById (id: number): Promise<IAttributeValue> {\n  return api.get(`/attributes/values/${id}`);\n}\n\nexport function apiGetAttributesByProductId (id: number): Promise<IAttributeProductValue[]> {\n  return api.get(`/attributes/inProduct/${id}`);\n}\n","import { ICategoriesList, ICategory, IProductCategoryInfo } from '../models/schemas';\nimport api from './webApi';\n\nexport function apiGetCategories (page: number, limit: number): Promise<ICategoriesList> {\n  return api.get('/categories', { page, limit });\n}\n\nexport function apiGetCategoryById (id: number): Promise<ICategory> {\n  return api.get(`/categories/${id}`);\n}\n\nexport function apiGetCategoriesByProductId (id: number): Promise<IProductCategoryInfo[]> {\n  return api.get(`/categories/inProduct/${id}`);\n}\n\nexport function apiGetCategoriesByDepartmentId (id: number): Promise<ICategory[]> {\n  return api.get(`/categories/inDepartment/${id}`);\n}\n","import {\n  IProductComplete,\n  IProductDetail,\n  IProductList,\n  IProductLocations,\n  IReview\n} from '../models/schemas';\nimport api from './webApi';\n\nexport function apiGetProducts (page = 1, limit = 20, descriptionLength = 200): Promise<IProductList> {\n  return api.get('/products', { page, limit, description_length: descriptionLength });\n}\n\nexport function apiSearchProducts (\n  query: string,\n  allWords = 'on',\n  page = 1,\n  limit = 20,\n  descriptionLength = 200\n): Promise<IProductList> {\n  return api.get('/products/search', {\n    query_string: query,\n    all_words: allWords,\n    page,\n    limit,\n    description_length: descriptionLength\n  });\n}\n\nexport function apiGetProductById (id: number): Promise<IProductComplete> {\n  return api.get(`/products/${id}`);\n}\n\n// Get a list of Products of Categories\nexport function apiGetProductByCategoryId (id: number): Promise<IProductList> {\n  return api.get(`/products/inCategory/${id}`);\n}\n\n// Get a list of Products of Departments\nexport function apiGetProductByDepartmentId (id: number): Promise<IProductList> {\n  return api.get(`/products/inDepartment/${id}`);\n}\n\n// Get details of a product by product's id\nexport function apiGetProductDetailById (id: number): Promise<IProductDetail> {\n  return api.get(`/products/${id}/details`);\n}\n\n// Get locations of a product by product's id\nexport function apiGetProductLocationsById (id: number): Promise<IProductLocations> {\n  return api.get(`/products/${id}/locations`);\n}\n\n// Get reviews of a product by product's id\nexport function apiGetProductReviewsById (id: number): Promise<IReview[]> {\n  return api.get(`/products/${id}/reviews`);\n}\n\n// Post a review for a product.\nexport function apiPostProductReviewsById (productId: number, review: string, rating: number): Promise<any> {\n  return api.authPost(`/products/${productId}/reviews`, { review, rating });\n}\n","export function isValidEmail (email: string): boolean {\n  return !!(email && email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/i));\n}\n\nexport function arrayChunks (array: any[], chunkLength: number): any[] {\n  const chunks = [];\n  for (let i = 0; i < array.length; i += chunkLength) {\n    chunks.push(array.slice(i, i + chunkLength));\n  }\n  return chunks;\n}\n","export const GET_DEPARTMENTS = 'GET_DEPARTMENTS';\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\nexport const GET_PRODUCT_CATEGORIES = 'GET_PRODUCT_CATEGORIES';\n\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const GET_PRODUCT_DETAILS = 'GET_PRODUCT_DETAILS';\n\nexport const GET_PRODUCT_ATTRIBUTES = 'GET_PRODUCT_ATTRIBUTES';\nexport const GET_PRODUCT_REVIEWS = 'GET_PRODUCT_REVIEWS';\n\nexport const MODAL_DIALOG = 'MODAL_DIALOG';\nexport const CUSTOMER_LOGIN = 'CUSTOMER_LOGIN';\nexport const CUSTOMER_LOGOUT = 'CUSTOMER_LOGOUT';\n\nexport const ADD_CART_ITEM = 'ADD_CART';\nexport const REMOVE_CART_ITEM = 'REMOVE_CART';\nexport const UPDATE_CART_ITEM = 'UPDATE_CART_ITEM';\nexport const CHECKOUT_CART = 'CHECKOUT_CART';\n","import { Dispatch } from 'react';\nimport { DispatchProp } from 'react-redux';\nimport { attributeApis, categoryApis, productApis } from '../../apis';\nimport { apiCustomerLogin, apiRegisterCustomer } from '../../apis/customer';\nimport api from '../../apis/webApi';\nimport { IDialogProps } from '../reducers/Dialogs';\nimport {\n  IAction,\n  IAttributeProductValue,\n  ICustomer,\n  ICustomerRegister,\n  IProductComplete,\n  IProductDetail,\n  IReview\n} from '../schemas';\nimport * as ActionTypes from './ActionTypes';\n\nexport const actionGetProducts = (page = 1, limit = 6): any => (\n  dispatch: (action: IAction) => void\n) => {\n  dispatch({\n    type: ActionTypes.GET_PRODUCTS,\n    params: {\n      isFetching: true\n    }\n  });\n  return productApis\n    .apiGetProducts(page, limit)\n    .then((result) =>\n      dispatch({\n        type: ActionTypes.GET_PRODUCTS,\n        params: {\n          isFetching: false,\n          success: true,\n          data: result,\n          page,\n          limit\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({\n        type: ActionTypes.GET_PRODUCTS,\n        params: {\n          isFetching: false,\n          success: false,\n          error\n        }\n      });\n    });\n};\n\nexport const actionGetProductDetail = (productId: number): any => (\n  dispatch: (action: IAction) => void\n) => {\n  return productApis.apiGetProductById(productId).then((result) =>\n    dispatch({\n      type: ActionTypes.GET_PRODUCT_DETAILS,\n      params: {\n        success: true,\n        productId,\n        data: result\n      }\n    })\n  );\n};\n\nexport const actionGetCategories = (page = 1, limit = 20): any => (\n  dispatch: (action: IAction) => void\n) => {\n  dispatch({\n    type: ActionTypes.GET_CATEGORIES,\n    params: {\n      isFetching: true\n    }\n  });\n  return categoryApis\n    .apiGetCategories(page, limit)\n    .then((result) =>\n      dispatch({\n        type: ActionTypes.GET_CATEGORIES,\n        params: {\n          isFetching: false,\n          success: true,\n          data: result,\n          page,\n          limit\n        }\n      })\n    )\n    .catch((error) => {\n      dispatch({\n        type: ActionTypes.GET_CATEGORIES,\n        params: {\n          isFetching: false,\n          success: false,\n          error\n        }\n      });\n    });\n};\n\nexport const actionGetProductCategories = (productId: number): any => (\n  dispatch: (action: IAction) => void\n) => {\n  return categoryApis.apiGetCategoriesByProductId(productId).then((result) =>\n    dispatch({\n      type: ActionTypes.GET_PRODUCT_CATEGORIES,\n      params: {\n        success: true,\n        productId,\n        data: result\n      }\n    })\n  );\n};\n\nexport const actionGetProductAttributes = (productId: number): any => (\n  dispatch: (action: IAction) => void\n) => {\n  return attributeApis.apiGetAttributesByProductId(productId).then((result) =>\n    dispatch({\n      type: ActionTypes.GET_PRODUCT_ATTRIBUTES,\n      params: {\n        success: true,\n        productId,\n        data: result\n      }\n    })\n  );\n};\n\nexport const actionGetProductReviews = (productId: number): any => (\n  dispatch: (action: IAction) => void\n) => {\n  return productApis.apiGetProductReviewsById(productId).then((result) =>\n    dispatch({\n      type: ActionTypes.GET_PRODUCT_REVIEWS,\n      params: {\n        success: true,\n        productId,\n        data: result\n      }\n    })\n  );\n};\n\nexport const actionPostProductReviews = (productId: number, review: IReview): any => (\n  dispatch: (action: IAction) => void\n) => {\n  if (!api.isAuthorized()) {\n    dispatch(actionShowDialog('login', {}));\n  }\n  return productApis\n    .apiPostProductReviewsById(productId, review.review, review.rating)\n    .then(() => dispatch(actionGetProductReviews(productId)));\n};\n\nexport const actionShowDialog = (name: string, props: IDialogProps): IAction => {\n  return {\n    type: ActionTypes.MODAL_DIALOG,\n    params: {\n      name,\n      ...props,\n      show: true\n    }\n  };\n};\n\nexport const actionHideDialog = (name: string): IAction => {\n  return {\n    type: ActionTypes.MODAL_DIALOG,\n    params: {\n      name,\n      show: false\n    }\n  };\n};\n\nexport const actionCustomerLogOut = (): IAction => {\n  api.auth('');\n  return {\n    type: ActionTypes.CUSTOMER_LOGOUT,\n    params: {}\n  };\n};\n\nexport const actionCustomerLogin = (email: string, password: string): any => (\n  dispatch: (action: IAction) => void\n) => {\n  dispatch(\n    actionShowDialog('login', {\n      requesting: true\n    })\n  );\n  return apiCustomerLogin(email, password)\n    .then((result: ICustomerRegister) => {\n      api.auth(result.accessToken);\n      dispatch(actionHideDialog('login'));\n      dispatch({\n        type: ActionTypes.CUSTOMER_LOGIN,\n        params: result.user\n      });\n      return result;\n    })\n    .catch((error) => {\n      dispatch(\n        actionShowDialog('login', {\n          error: 'Login failed! Please try again!'\n        })\n      );\n    });\n};\n\nexport const actionCustomerRegister = (email: string, password: string): any => (\n  dispatch: (action: IAction) => void\n) => {\n  dispatch(\n    actionShowDialog('register', {\n      requesting: true\n    })\n  );\n  return apiRegisterCustomer(email, email, password)\n    .then((result: ICustomerRegister) => {\n      api.auth(result.accessToken);\n      dispatch(actionHideDialog('register'));\n      dispatch({\n        type: ActionTypes.CUSTOMER_LOGIN,\n        params: result.user\n      });\n      return result;\n    })\n    .catch((error) => {\n      dispatch(\n        actionShowDialog('register', {\n          error: 'Register failed! Please try again!'\n        })\n      );\n    });\n};\n\nexport const actionAddCartItem = (\n  product: IProductComplete,\n  attributes: IAttributeProductValue[],\n  quantity: number\n): IAction => {\n  return {\n    type: ActionTypes.ADD_CART_ITEM,\n    params: {\n      product,\n      attributes,\n      quantity\n    }\n  };\n};\n\nexport const actionRemoveCartItem = (itemId: string): IAction => {\n  return {\n    type: ActionTypes.REMOVE_CART_ITEM,\n    params: {\n      itemId\n    }\n  };\n};\n\nexport const actionUpdateCartItemQuantity = (itemId: string, quantity: number): IAction => {\n  return {\n    type: ActionTypes.UPDATE_CART_ITEM,\n    params: {\n      itemId,\n      quantity\n    }\n  };\n};\n\nexport const actionCartCheckout = (): IAction => {\n  return {\n    type: ActionTypes.CHECKOUT_CART,\n    params: {}\n  };\n};\n","import { ICustomer, ICustomerAddress, ICustomerRegister } from '../models/schemas';\nimport { isValidEmail } from '../utils';\nimport api from './webApi';\n\nexport function apiUpdateCustomer (customer: ICustomer): Promise<any> {\n  if (!api.isAuthorized()) {\n    return Promise.reject('User unauthorized!');\n  }\n  const { customer_id, ...profiles } = customer;\n  return api.put('/customer', profiles);\n}\n\nexport function apiGetCustomer (): Promise<ICustomer> {\n  return api.get('/customer');\n}\n\nexport function apiRegisterCustomer (name: string, email: string, password: string): Promise<any> {\n  // Validate data first\n  if (!name || !password || !isValidEmail(email)) {\n    return Promise.reject('Invalid parameters!');\n  }\n  return api.post('/customers', { name, email, password });\n}\n\nexport function apiCustomerLogin (email: string, password: string): Promise<ICustomerRegister> {\n  // Validate data first\n  if (!password || !isValidEmail(email)) {\n    return Promise.reject('Invalid parameters!');\n  }\n  return api.post('/customers/login', { email, password });\n}\n\n// Sign in with a facebook login token.\nexport function apiCustomerFacebookLogin (accessToken: string): Promise<ICustomerRegister> {\n  // Validate data first\n  if (!accessToken) {\n    return Promise.reject('Invalid parameters!');\n  }\n  return api.post('/customers/facebook', { access_token: accessToken});\n}\n\n// Update the address from customer\nexport function apiUpdateCustomerAddress (address: ICustomerAddress): Promise<any> {\n  if (!api.isAuthorized()) {\n    return Promise.reject('User unauthorized!');\n  }\n  return api.put('/customers/address', address);\n}\n\n// Update the credit card from customer\nexport function apiUpdateCustomerCreditCard (creditCard: string): Promise<any> {\n  if (!api.isAuthorized()) {\n    return Promise.reject('User unauthorized!');\n  }\n  return api.put('/customers/creditCard', {credit_card: creditCard});\n}\n","import React from 'react';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { ButtonGroup } from 'react-bootstrap';\n\nexport interface IColorPickerProps {\n  colors: string[];\n  activeColor?: string;\n  onColorChange?: (color: string) => void;\n}\n\nexport interface IColorPickerState {\n  activeColor: string;\n}\n\nexport default class CompColorPicker extends React.Component<\n  IColorPickerProps,\n  IColorPickerState\n> {\n  constructor (props: IColorPickerProps) {\n    super(props);\n    this.state = {\n      activeColor: props.activeColor || ''\n    };\n  }\n\n  public colorChangeHandler = (color: string) => () => {\n    const { activeColor } = this.state;\n    const { onColorChange } = this.props;\n    if (color !== activeColor) {\n      this.setState({ activeColor: color });\n      onColorChange && onColorChange(color);\n    }\n  }\n\n  public render () {\n    const props = this.props;\n    const { activeColor } = this.state;\n    if (!this.state.activeColor && props.colors.length) {\n      this.colorChangeHandler(props.colors[0])();\n    }\n    return (\n      <div className='mr-2 mb-2'>\n        {props.colors.map((color) => (\n          <Button\n            className='rounded-circle mr-3 mb-2'\n            style={{\n              width: '1rem',\n              height: '1rem',\n              backgroundColor: color,\n              padding: 0,\n              border: 'solid 3px #fff',\n              boxShadow: `0px 0px 2px 2px ${\n                color === activeColor ? '#f62f5e' : 'rgba(0,0,0,0.2)'\n              }`\n            }}\n            onClick={this.colorChangeHandler(color)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport React from 'react';\nimport { Button, ButtonToolbar, Form } from 'react-bootstrap';\nimport { ButtonGroup } from 'react-bootstrap';\n\nexport interface IQuantityInputProps {\n  max?: number;\n  min?: number;\n  step?: number;\n  value?: number;\n  onChange?: (value: number) => void;\n}\n\nexport interface IQuantityInputState {\n  value: number;\n  clear: boolean;\n}\n\nexport default class CompQuantityInput extends React.Component<\n  IQuantityInputProps,\n  IQuantityInputState\n> {\n  constructor (props: IQuantityInputProps) {\n    super(props);\n    const { value = 1 } = props;\n    this.state = {\n      value,\n      clear: false\n    };\n  }\n\n  public render () {\n    const { min = 1, max = 99, step = 1, onChange } = this.props;\n    const { value, clear } = this.state;\n\n    return (\n      <ButtonToolbar aria-label='Size picker'>\n        <ButtonGroup className='mr-2'>\n          <Button\n            style={{ width: '2rem', height: '2rem', padding: 0, boxShadow: 'none' }}\n            variant='outline-secondary'\n            className='rounded-circle mr-2 bg-light'\n            onClick={() => {\n              let val = value - step;\n              val = Math.max(min, Math.min(val, max));\n              this.setState({ value: val, clear: false });\n              onChange && onChange(val);\n            }}>\n            <RemoveIcon />\n          </Button>\n          <input\n            style={{ width: '4rem', height: '2rem', padding: 0, outline: 'none' }}\n            className='border border-secondary rounded-pill mr-2 text-center'\n            value={clear ? '' : value.toString(10)}\n            onChange={(e) => {\n              let val = parseInt(e.target.value, 10);\n              val = Math.max(min, Math.min(val, max));\n              if (isNaN(val)) {\n                this.setState({ clear: true });\n              } else {\n                this.setState({ value: val, clear: false });\n                onChange && onChange(val);\n              }\n              e.preventDefault();\n            }}\n          />\n          <Button\n            style={{ width: '2rem', height: '2rem', padding: 0, boxShadow: 'none' }}\n            variant='outline-secondary'\n            className='rounded-circle mr-2 bg-light'\n            onClick={() => {\n              let val = value + step;\n              val = Math.max(min, Math.min(val, max));\n              this.setState({ value: val, clear: false });\n              onChange && onChange(val);\n            }}>\n            <AddIcon />\n          </Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n    );\n  }\n}\n","import React from 'react';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { ButtonGroup } from 'react-bootstrap';\n\nexport interface ISizePickerProps {\n  sizes: string[];\n  activeSize?: string;\n  onSizeChange?: (size: string) => void;\n}\n\nexport interface ISizePickerState {\n  activeSize: string;\n}\n\nexport default class CompSizePicker extends React.Component<\n  ISizePickerProps,\n  ISizePickerState\n> {\n  constructor (props: ISizePickerProps) {\n    super(props);\n    this.state = {\n      activeSize: props.activeSize || ''\n    };\n  }\n\n  public sizeChangeHandler = (size: string) => () => {\n    const { activeSize } = this.state;\n    const { onSizeChange } = this.props;\n    if (size !== activeSize) {\n      this.setState({ activeSize: size });\n      onSizeChange && onSizeChange(size);\n    }\n  }\n\n  public render () {\n    const props = this.props;\n    const { activeSize } = this.state;\n    if (!activeSize && props.sizes.length) {\n      this.sizeChangeHandler(props.sizes[0])();\n    }\n\n    return (\n      <div className='mr-2 mb-2'>\n        {props.sizes.map((size) => (\n          <Button\n            style={{ boxShadow: 'none' }}\n            variant={size === activeSize ? 'danger' : 'light'}\n            className='sm border-light rounded mb-2 mr-2'\n            onClick={this.sizeChangeHandler(size)}>\n            {size}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n}\n","import { CircularProgress } from '@material-ui/core';\nimport { withSnackbar, withSnackbarProps } from 'notistack';\nimport { FormEvent } from 'react';\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Media } from 'react-bootstrap';\nimport { Button, Col, Container, Modal, Row, Table } from 'react-bootstrap';\nimport { connect, DispatchProp } from 'react-redux';\nimport api from '../apis/webApi';\nimport { CDN_ROOT } from '../configs';\nimport {\n  actionCartCheckout,\n  actionHideDialog,\n  actionRemoveCartItem,\n  actionShowDialog,\n  actionUpdateCartItemQuantity\n} from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { ICartState } from '../models/reducers/Cart';\nimport { IDialogProps } from '../models/reducers/Dialogs';\nimport { ICustomer } from '../models/schemas';\nimport CompColorPicker from './CompColorPicker';\nimport CompQuantityInput from './CompQuantityInput';\nimport CompSizePicker from './CompSizePicker';\n\ninterface ICartDialogProps extends DispatchProp, IDialogProps, withSnackbarProps {\n  cart: ICartState;\n  user: ICustomer;\n}\n\nfunction CompCartDialog (props: ICartDialogProps) {\n  const {\n    cart: { items, total }\n  } = props;\n  return (\n    <Modal\n      size='lg'\n      show={props.show}\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n      onHide={() => {\n        props.dispatch(actionHideDialog('cart'));\n      }}>\n      <Modal.Header closeButton>\n        <Modal.Title className='w-100'>\n          <h3>{Object.keys(items).length} Items In Your Cart</h3>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className='p-4'>\n        <Container>\n          <Row className='border-bottom text-muted p-2'>\n            <Col as='h6' md={6}>\n              Item\n            </Col>\n            <Col as='h6' md={1}>\n              Size\n            </Col>\n            <Col as='h6' md={1}>\n              Color\n            </Col>\n            <Col as='h6' md={3}>\n              Quantity\n            </Col>\n            <Col as='h6' md={1}>\n              Price\n            </Col>\n          </Row>\n          {Object.keys(items).map((itemId) => {\n            const item = items[itemId];\n            return (\n              <Row className='text-muted p-2 my-4'>\n                <Col md={6}>\n                  <Media>\n                    <img\n                      width={96}\n                      height={96}\n                      className='mr-3'\n                      src={`${CDN_ROOT}${item.product.image}`}\n                      alt={item.product.name}\n                    />\n                    <Media.Body>\n                      <h6>{item.product.name}</h6>\n                      <span\n                        className='text-muted cursor-pointer'\n                        onClick={() => {\n                          props.dispatch(actionRemoveCartItem(itemId));\n                        }}>\n                        <span className='text-danger px-2'>X</span> Remove\n                      </span>\n                    </Media.Body>\n                  </Media>\n                </Col>\n                <Col md={1}>\n                  <CompSizePicker\n                    sizes={item.attributes\n                      .filter((s) => s.attribute_name === 'Size')\n                      .map((a) => a.attribute_value)}\n                  />\n                </Col>\n                <Col md={1} className='pt-2'>\n                  <CompColorPicker\n                    colors={item.attributes\n                      .filter((s) => s.attribute_name === 'Color')\n                      .map((a) => a.attribute_value)}\n                  />\n                </Col>\n                <Col md={3}>\n                  <CompQuantityInput\n                    value={item.quantity}\n                    onChange={(val) => {\n                      props.dispatch(actionUpdateCartItemQuantity(itemId, val));\n                    }}\n                  />\n                </Col>\n                <Col as='h6' md={1}>\n                  ${item.subtotal.toFixed(2)}\n                </Col>\n              </Row>\n            );\n          })}\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Container className='d-flex justify-content-between'>\n          <Button\n            variant='outline-danger'\n            size='lg'\n            className='rounded-pill'\n            onClick={() => {\n              props.dispatch(actionHideDialog('cart'));\n            }}>\n            Back To Shop\n          </Button>\n          <Button\n            variant='danger'\n            size='lg'\n            className='rounded-pill'\n            disabled={!Object.keys(props.cart.items).length}\n            onClick={() => {\n              if (!props.user.name) {\n                props.dispatch(actionShowDialog('login', {}));\n              }\n              props.dispatch(actionHideDialog('cart'));\n              api.loginChain.then(() => {\n                props.dispatch(actionCartCheckout());\n                props.enqueueSnackbar(\n                  <span>\n                    Your order <strong>#{Date.now()}</strong> was created successfully!\n                  </span>,\n                  { variant: 'success' }\n                );\n              });\n            }}>\n            Check Out\n          </Button>\n        </Container>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default connect((state: IRootState) => {\n  const { show = false, message = '', error = '', requesting = false } =\n    state.Dialogs.cart || {};\n  return { show, message, error, requesting, cart: state.Cart, user: state.Customer };\n})(withSnackbar(CompCartDialog));\n","import React from 'react';\nimport { Card, Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\n\nexport default function CompFooterNav (props: any) {\n  return (\n    <Container className='footerNav'>\n      <Row>\n        <Col md={3}>\n          <h5>QUESTION?</h5>\n          <div>\n            <div>\n              <a href='/help'>Help</a>\n            </div>\n            <div>\n              <a href='/track'>Track Order</a>\n            </div>\n            <div>\n              <a href='/return'>Returns</a>\n            </div>\n          </div>\n        </Col>\n        <Col md={3}>\n          <h5>WHAT'S IN STORE</h5>\n          <div>\n            <div>\n              <a href='/help'>Women</a>\n            </div>\n            <div>\n              <a href='/track'>Men</a>\n            </div>\n            <div>\n              <a href='/return'>Product A-Z</a>\n            </div>\n            <div>\n              <a href='/'>Buy Gift Vouchers</a>\n            </div>\n          </div>\n        </Col>\n        <Col md={3}>\n          <h5>FOLLOW US</h5>\n          <div>\n            <div>\n              <a href='https://facebook.com'>Facebook</a>\n            </div>\n            <div>\n              <a href='https://twitter.com'>Twitter</a>\n            </div>\n            <div>\n              <a href='https://youtube.com'>Youtube</a>\n            </div>\n          </div>\n        </Col>\n        <Col md={3}>\n          <p>@2019 nmhung1210</p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import { Card, CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport { FormEvent } from 'react';\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { connect, DispatchProp } from 'react-redux';\nimport { actionCustomerLogin, actionHideDialog, actionShowDialog } from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { IDialogProps } from '../models/reducers/Dialogs';\n\ninterface ILoginModalProps extends DispatchProp, IDialogProps {}\n\nfunction CompLoginDialog (props: ILoginModalProps) {\n  return (\n    <Modal\n      size='sm'\n      show={props.show}\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n      onHide={() => {\n        props.dispatch(actionHideDialog('login'));\n      }}>\n      <Card className='text-center'>\n        <Form\n          onSubmit={(e: FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            e.stopPropagation();\n            const formData = new FormData(e.currentTarget);\n            const param = {\n              email: formData.get('email') as string,\n              password: formData.get('password') as string,\n              remember: !!formData.get('remember')\n            };\n            props.dispatch(actionCustomerLogin(param.email, param.password));\n            return false;\n          }}>\n          <Modal.Header closeButton>\n            <Modal.Title className='text-center w-100'>\n              <h3>Sign in</h3>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className='p-4'>\n            <Form.Group controlId='formBasicEmail'>\n              <Form.Control\n                disabled={!!props.requesting}\n                type='email'\n                name='email'\n                placeholder='Enter email'\n                size='lg'\n              />\n            </Form.Group>\n            <Form.Group controlId='formBasicPassword'>\n              <Form.Control\n                disabled={!!props.requesting}\n                type='password'\n                name='password'\n                placeholder='Password'\n                size='lg'\n              />\n            </Form.Group>\n            <Form.Group controlId='formBasicChecbox'>\n              <Form.Check\n                readOnly={!!props.requesting}\n                type='checkbox'\n                name='remember'\n                value='remember'\n                label='Remember me'\n              />\n            </Form.Group>\n            <Form.Group controlId='formErrorMessage'>\n              <Form.Text className='text-danger'>{props.error}</Form.Text>\n            </Form.Group>\n            <Button\n              size='lg'\n              disabled={!!props.requesting}\n              variant='danger'\n              type='submit'\n              className='px-4 rounded-pill'>\n              {props.requesting ? (\n                <CircularProgress size='1.5rem' className='text-light' />\n              ) : null}{' '}\n              Sign in\n            </Button>\n          </Modal.Body>\n          <Modal.Footer className='p-1'>\n            <Container className='d-flex justify-content-between p-0'>\n              <Button\n                variant='link'\n                size='sm'\n                className='text-danger'\n                onClick={() => {\n                  // TODO: Implement for forgot password\n                }}>\n                Forgot password?\n              </Button>\n              <Button\n                variant='link'\n                size='sm'\n                className='text-danger'\n                onClick={() => {\n                  props.dispatch(actionHideDialog('login'));\n                  props.dispatch(actionShowDialog('register', {}));\n                }}>\n                Create an account\n              </Button>\n            </Container>\n          </Modal.Footer>\n        </Form>\n      </Card>\n    </Modal>\n  );\n}\n\nexport default connect((state: IRootState) => {\n  const { show = false, message = '', error = '', requesting = false } =\n    state.Dialogs.login || {};\n  return { show, message, error, requesting };\n})(CompLoginDialog);\n","import { Card, CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport { FormEvent } from 'react';\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { connect, DispatchProp } from 'react-redux';\nimport { actionCustomerRegister, actionHideDialog, actionShowDialog } from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { IDialogProps } from '../models/reducers/Dialogs';\n\ninterface IRegisterModalProps extends DispatchProp, IDialogProps {}\n\nfunction CompRegisterDialog(props: IRegisterModalProps) {\n  return (\n    <Modal\n      size='sm'\n      show={props.show}\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n      onHide={() => {\n        props.dispatch(actionHideDialog('register'));\n      }}>\n      <Card className='text-center'>\n        <Form\n          onSubmit={(e: FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            e.stopPropagation();\n            const formData = new FormData(e.currentTarget);\n            const param = {\n              email: formData.get('email') as string,\n              password: formData.get('password') as string,\n              reTypePassword: formData.get('reTypePassword') as string\n            };\n            if (param.password !== param.reTypePassword) {\n              props.dispatch(\n                actionShowDialog('register', { error: 'Password does not match!' })\n              );\n            } else {\n              props.dispatch(actionCustomerRegister(param.email, param.password));\n            }\n            return false;\n          }}>\n          <Modal.Header closeButton>\n            <Modal.Title className='text-center w-100'>\n              <h3>Register</h3>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className='p-4'>\n            <Form.Group controlId='formBasicEmail'>\n              <Form.Control\n                disabled={!!props.requesting}\n                type='email'\n                name='email'\n                placeholder='Enter email'\n                size='lg'\n              />\n            </Form.Group>\n            <Form.Group controlId='formBasicPassword'>\n              <Form.Control\n                disabled={!!props.requesting}\n                type='password'\n                name='password'\n                placeholder='Password'\n                size='lg'\n              />\n            </Form.Group>\n            <Form.Group controlId='formBasicPassword'>\n              <Form.Control\n                disabled={!!props.requesting}\n                type='password'\n                name='reTypePassword'\n                placeholder='Re-type Password'\n                size='lg'\n              />\n            </Form.Group>\n            <Form.Group controlId='formErrorMessage'>\n              <Form.Text className='text-danger'>{props.error}</Form.Text>\n            </Form.Group>\n            <Button\n              size='lg'\n              disabled={!!props.requesting}\n              variant='danger'\n              type='submit'\n              className='px-4 rounded-pill'>\n              {props.requesting ? (\n                <CircularProgress size='1.5rem' className='text-light' />\n              ) : null}{' '}\n              Register\n            </Button>\n          </Modal.Body>\n          <Modal.Footer className='p-1'>\n            <Container className='d-flex justify-content-between p-1'>\n              <span>Already have an account?</span>\n              <Button\n                variant='link'\n                size='sm'\n                className='text-danger'\n                onClick={() => {\n                  props.dispatch(actionHideDialog('register'));\n                  props.dispatch(actionShowDialog('login', {}));\n                }}>\n                Sign in\n              </Button>\n            </Container>\n          </Modal.Footer>\n        </Form>\n      </Card>\n    </Modal>\n  );\n}\n\nexport default connect((state: IRootState) => {\n  const { show = false, message = '', error = '', requesting = false } =\n    state.Dialogs.register || {};\n  return { show, message, error, requesting };\n})(CompRegisterDialog);\n","import Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport React from 'react';\nimport { Container, Nav, Navbar, Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { connect, DispatchProp } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actionCustomerLogOut, actionShowDialog } from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { ICartState } from '../models/reducers/Cart';\nimport { ICustomer } from '../models/schemas';\n\ninterface ITopNavBarProps extends DispatchProp {\n  user: ICustomer;\n  cart: ICartState;\n}\n\nfunction CompTopNavBar (props: ITopNavBarProps) {\n  const { user, cart } = props;\n  return (\n    <div className='sticky-top'>\n      <Navbar bg='dark text-light py-1'>\n        {user.name ? (\n          <h6 className='m-2'>\n            Hi{`  ${user.name},  `}\n            <span\n              className='text-danger py-1 cursor-pointer'\n              onClick={() => props.dispatch(actionCustomerLogOut())}>\n              Sign out\n            </span>\n            {'  '}\n          </h6>\n        ) : (\n          <h6 className='m-2'>\n            Hi{'  '}\n            <span\n              className='text-danger py-1 cursor-pointer'\n              onClick={() => props.dispatch(actionShowDialog('login', {}))}>\n              Sign in\n            </span>\n            {'  '}\n            or{'  '}\n            <span\n              className='text-danger p-1 cursor-pointer'\n              onClick={() => props.dispatch(actionShowDialog('register', {}))}>\n              Register\n            </span>\n          </h6>\n        )}\n      </Navbar>\n      <Navbar collapseOnSelect expand='lg' bg='light' variant='light'>\n        <Link to='/' className='brandName'>\n          SHOPMATE\n        </Link>\n        <Navbar.Collapse>\n          <Container>\n            <Row className='justify-content-md-center'>\n              <Col md='1' />\n              <Col md='8'>\n                <Nav className='mr-auto'>\n                  <Link to='/search?query_string=women' className='mainNavItem'>\n                    Women\n                  </Link>\n                  <Link to='/search?query_string=men' className='mainNavItem'>\n                    Men\n                  </Link>\n                  <Link to='/search?query_string=kids' className='mainNavItem'>\n                    Kids\n                  </Link>\n                  <Link to='/search?query_string=shose' className='mainNavItem'>\n                    Shose\n                  </Link>\n                  <Link to='/search?query_string=brands' className='mainNavItem'>\n                    Brands\n                  </Link>\n                </Nav>\n              </Col>\n              <Col md='3'>\n                <Nav className='justify-content-end'>\n                  <IconButton aria-label='Search'>\n                    <SearchIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label='Cart'\n                    onClick={() => {\n                      props.dispatch(actionShowDialog('cart', {}));\n                    }}>\n                    <Badge badgeContent={Object.keys(cart.items).length} color='secondary'>\n                      <ShoppingCartIcon />\n                    </Badge>\n                  </IconButton>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n          <Nav />\n        </Navbar.Collapse>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n      </Navbar>\n    </div>\n  );\n}\n\nexport default connect((state: IRootState) => {\n  return {\n    user: state.Customer,\n    cart: state.Cart\n  };\n})(CompTopNavBar);\n","import React from 'react';\nimport { Button, Card, Carousel, Container, Jumbotron, Row } from 'react-bootstrap';\n\n// This is a mad head item that focusing on proposal new hot on the site.\n// TODO: Intergrate with backend to have it act like carousel series of hot things.\nexport default function CompJumboTronCard (props: any) {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>New Trend</Card.Title>\n        <Card.Text>Scandi-cool</Card.Text>\n        <Button variant='danger' className='rounded-pill' size='lg'>\n          SHOP NOW\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\nimport { Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CDN_ROOT } from '../configs';\nimport { IProduct } from '../models/schemas';\n\nexport interface IProductCardProps {\n  product: IProduct;\n}\n\nexport default function CompProductCard (props: IProductCardProps) {\n  const { name, thumbnail, price, discounted_price } = props.product;\n  const haveDiscounted = parseFloat(discounted_price) > 0;\n  return (\n    <Card as={Col} md='4' className='p-0'>\n      <Card.Img src={`${CDN_ROOT}${thumbnail}`} className='p-4' />\n      {haveDiscounted ? (\n        <Card.ImgOverlay>\n          <h4>\n            <Badge variant='danger'>HOT</Badge>\n          </h4>\n        </Card.ImgOverlay>\n      ) : null}\n      <Card.Body className='d-flex flex-column text-center'>\n        <Card.Title as='h5'>{name}</Card.Title>\n        <Card.Text as='h5' className='mt-4 mb-4'>\n          <span className='text-danger pr-3'>${haveDiscounted ? discounted_price : price}</span>\n          {haveDiscounted ? (\n            <sup>\n              <del>${price}</del>\n            </sup>\n          ) : null}\n        </Card.Text>\n      </Card.Body>\n      <div className='productCover position-absolute w-100 h-100  d-flex align-items-center justify-content-center'>\n        <Link\n          to={`/product/${props.product.product_id}`}\n          className='btn btn-danger rounded-pill'>\n          Buy now\n        </Link>\n      </div>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\nimport { Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CDN_ROOT } from '../configs';\nimport { IProduct } from '../models/schemas';\n\nexport interface IProductPromotionCardProps {\n  product: IProduct;\n}\n\nexport default function CompProductPromotionCard (props: IProductPromotionCardProps) {\n  const { name, description, thumbnail } = props.product;\n  return (\n    <Card className='border-0 p-4'>\n      <Row>\n        <Col md={4}>\n          <Card.Img src={`${CDN_ROOT}${thumbnail}`} />\n          <Card.ImgOverlay style={{ padding: 0 }}>\n            <h2>\n              <Badge variant='info'>SALE</Badge>\n            </h2>\n          </Card.ImgOverlay>\n        </Col>\n        <Col md={8}>\n          <h2>{name}</h2>\n          <p>{description}</p>\n          <Link to={`/product/${props.product.product_id}`} className='btn btn-danger rounded-pill'>\n            Buy now\n          </Link>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n","import { Card } from '@material-ui/core';\nimport * as React from 'react';\nimport { CardDeck, CardGroup, Container, Jumbotron, Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { connect, DispatchProp } from 'react-redux';\nimport JumboTronCard from '../components/CompJumboTronCard';\nimport CompProductCard from '../components/CompProductCard';\nimport PromotionCard from '../components/CompProductPromotionCard';\nimport { actionGetProducts } from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { IProductState } from '../models/reducers/Products';\n\nexport interface IHomePageProps extends DispatchProp {\n  products: IProductState;\n}\nclass HomePage extends React.Component<IHomePageProps> {\n  constructor (props: IHomePageProps) {\n    super(props);\n  }\n  public componentWillMount () {\n    this.props.dispatch(actionGetProducts());\n  }\n  public render () {\n    const products = this.props.products;\n    return (\n      <Container className='p-0'>\n        <Jumbotron className='jumboTron'>\n          <JumboTronCard />\n        </Jumbotron>\n        <Container className='bg-light p-4'>\n          {products.promotion ? <PromotionCard product={products.promotion} /> : null}\n          <Card className='my-4 border-0' style={{boxShadow: 'none'}}>\n            <h2 className='text-muted m-2 ml-4'>HOT</h2>\n            <CardDeck className='p-4 border-0'>\n              {products.products.rows.slice(0, 4).map((product) => (\n                <CompProductCard product={product} />\n              ))}\n            </CardDeck>\n          </Card>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    products: state.Products\n  };\n};\n\nexport default connect(mapStateToProps)(HomePage);\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport IconStar from '@material-ui/icons/Star';\nimport IconStarBorder from '@material-ui/icons/StarBorder';\nimport human from 'human-time';\nimport React from 'react';\nimport { Button, Container, Form, Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Rating from 'react-rating';\nimport { IReview } from '../models/schemas';\ninterface IProductReviewEntryProps {\n  review: IReview;\n}\n\nexport default function CompProductReviewEntry (props: IProductReviewEntryProps) {\n  const review = props.review;\n  return (\n    <Container className='mt-2'>\n      <Row>\n        <Col md={4}>\n          <Rating\n            readonly\n            initialRating={review.rating}\n            emptySymbol={<IconStarBorder className='text-warning' />}\n            fullSymbol={<IconStar className='text-warning' />}\n            className='mb-3'\n          />\n          <h4>{review.name}</h4>\n          <p className='text-mute'>{human(new Date(review.created_on))}</p>\n        </Col>\n        <Col md={8}>\n          <p>{review.review}</p>\n          <p>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  icon={<FavoriteBorder />}\n                  checkedIcon={<Favorite />}\n                  value='checkedH'\n                  className='text-danger'\n                />\n              }\n              label='1'\n            />\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import IconStar from '@material-ui/icons/Star';\nimport IconStarBorder from '@material-ui/icons/StarBorder';\nimport React from 'react';\nimport { Button, Container, Form, Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Rating from 'react-rating';\nimport { IReview } from '../models/schemas';\n\ninterface IProductReviewFormProps {\n  onSubmit: (data: IReview) => void;\n  defaultRating: number;\n}\n\nexport default function CompProductReviewForm (props: IProductReviewFormProps) {\n  let rating = props.defaultRating;\n  return (\n    <Container>\n      <Form\n        className='mt-4'\n        method='get'\n        onSubmit={(e: any) => {\n          e.preventDefault();\n          e.stopPropagation();\n          const formData = new FormData(e.currentTarget);\n          const review = {\n            name: formData.get('nickname') as string,\n            review: formData.get('review') as string,\n            rating,\n            created_on: new Date().toISOString()\n          };\n          props.onSubmit(review);\n          e.currentTarget.reset();\n          return false;\n        }}>\n        <Form.Group as={Row} controlId='formHorizontalNickname' className='mt-4'>\n          <Col md={4}>\n            <Form.Label column className='pl-0'>\n              <h6>Choose a nickname</h6>\n            </Form.Label>\n          </Col>\n          <Col md={6}>\n            <Form.Control\n              as='input'\n              size='lg'\n              name='nickname'\n              type='text'\n              placeholder=''\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formHorizontalReview' className='mt-4'>\n          <Col md={4}>\n            <Form.Label column className='pl-0'>\n              <h6>Your review</h6>\n            </Form.Label>\n          </Col>\n          <Col md={8}>\n            <Form.Control\n              as='textarea'\n              minlength='50'\n              size='lg'\n              style={{ height: '10rem' }}\n              placeholder=''\n              name='review'\n              required\n            />\n            <p className='text-secondary font-weight-light'>\n              Your review should have at least 50 characters\n            </p>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formHorizontalRating' className='mt-4'>\n          <Col md={4}>\n            <Form.Label column className='pl-0'>\n              <h6>Overall rating</h6>\n            </Form.Label>\n          </Col>\n          <Col md={8}>\n            <Rating\n              initialRating={4.5}\n              onChange={(val: number) => {\n                rating = val;\n              }}\n              emptySymbol={<IconStarBorder className='text-warning' />}\n              fullSymbol={<IconStar className='text-warning' />}\n              className='mb-3'\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formHorizontalRating' className='mt-4 mb-4'>\n          <Col md={4} />\n          <Col md={8}>\n            <Button type='submit' variant='danger' size='lg' className='rounded-pill'>\n              Submit\n            </Button>\n          </Col>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport IconStar from '@material-ui/icons/Star';\nimport IconStarBorder from '@material-ui/icons/StarBorder';\nimport human from 'human-time';\nimport React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Rating from 'react-rating';\nimport { connect, DispatchProp } from 'react-redux';\nimport { actionPostProductReviews } from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { IProductState } from '../models/reducers/Products';\nimport { IReview } from '../models/schemas';\nimport CompProductReviewEntry from './CompProductReviewEntry';\nimport CompProductReviewForm from './CompProductReviewForm';\n\ninterface IProductViewProps extends DispatchProp {\n  products: IProductState;\n  productId: number;\n}\n\nfunction CompProductReviewSession (props: IProductViewProps) {\n  return (\n    <Container className='bg-light pt-4'>\n      <Row>\n        <Col md={1} />\n        <Col md={10}>\n          <Container className='mt-4  mb-4'>\n            <Row>\n              <Col md={6}>\n                <h3>Product reviews</h3>\n              </Col>\n            </Row>\n          </Container>\n          {props.products.productReviews.map((review: IReview) => (\n            <CompProductReviewEntry review={review} />\n          ))}\n        </Col>\n      </Row>\n      <Row>\n        <Col md={1} />\n        <Col md={10}>\n          <hr />\n        </Col>\n      </Row>\n      <Row>\n        <Col md={1} />\n        <Col md={10}>\n          <Container className='mt-4  mb-4'>\n            <Row>\n              <Col md={6}>\n                <h3 className='mt-4 mb-4'>Add review</h3>\n              </Col>\n            </Row>\n          </Container>\n          <CompProductReviewForm\n            defaultRating={5}\n            onSubmit={(review: IReview) => {\n              return props.dispatch(actionPostProductReviews(props.productId, review));\n            }}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default connect((state: IRootState) => {\n  return {\n    products: state.Products\n  };\n})(CompProductReviewSession);\n","import * as React from 'react';\nimport { Breadcrumb, ButtonGroup } from 'react-bootstrap';\nimport { Card, CardGroup, Container, Jumbotron, Row } from 'react-bootstrap';\nimport { Button, Col } from 'react-bootstrap';\nimport Rating from 'react-rating';\nimport { connect, DispatchProp } from 'react-redux';\nimport { RouteComponentProps, RouteProps } from 'react-router';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport CompProductCard from '../components/CompProductCard';\nimport PromotionCard from '../components/CompProductPromotionCard';\nimport { CDN_ROOT } from '../configs';\n\nimport IconStar from '@material-ui/icons/Star';\nimport IconStarBorder from '@material-ui/icons/StarBorder';\n\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport human from 'human-time';\nimport { withSnackbar, withSnackbarProps } from 'notistack';\nimport { ButtonToolbar } from 'react-bootstrap';\nimport { Media } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { Interface } from 'readline';\nimport CompColorPicker from '../components/CompColorPicker';\nimport CompProductReviewSession from '../components/CompProductReviewSession';\nimport CompQuantityInput from '../components/CompQuantityInput';\nimport CompSizePicker from '../components/CompSizePicker';\nimport {\n  actionAddCartItem,\n  actionGetProductAttributes,\n  actionGetProductCategories,\n  actionGetProductDetail,\n  actionGetProductReviews,\n  actionGetProducts\n} from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { ICategoriesState } from '../models/reducers/Categories';\nimport { IProductState } from '../models/reducers/Products';\nimport { IAttributeProductValue, IReview } from '../models/schemas';\ninterface IProductRouteParams {\n  id: string;\n}\n\ninterface IProductPageProps\n  extends DispatchProp,\n    RouteComponentProps<IProductRouteParams>,\n    withSnackbarProps {\n  products: IProductState;\n  categories: ICategoriesState;\n}\n\ninterface IProductPageState {\n  productImage: string;\n  quantity: number;\n  attributes: {\n    [index: string]: IAttributeProductValue;\n  };\n}\n\nclass ProductPage extends React.Component<IProductPageProps, IProductPageState> {\n  constructor (props: IProductPageProps) {\n    super(props);\n    this.state = {\n      productImage: '',\n      quantity: 1,\n      attributes: {}\n    };\n  }\n\n  public componentWillReceiveProps (props: IProductPageProps) {\n    const { productDetail } = props.products;\n    if (productDetail) {\n      this.setState({\n        productImage: productDetail.image\n      });\n    }\n  }\n\n  public componentWillMount () {\n    const {\n      dispatch,\n      match: { params }\n    } = this.props;\n    const productId = parseInt(params.id, 10);\n    dispatch(actionGetProductDetail(productId));\n    dispatch(actionGetProductCategories(productId));\n    dispatch(actionGetProductAttributes(productId));\n    dispatch(actionGetProductReviews(productId));\n  }\n\n  get availableSizes (): string[] {\n    const { productAtrributes } = this.props.products;\n    const availableSizes = productAtrributes\n      .filter((attr: IAttributeProductValue) => attr.attribute_name === 'Size')\n      .map((attr: IAttributeProductValue) => attr.attribute_value);\n    return availableSizes;\n  }\n\n  get availableColors (): string[] {\n    const { productAtrributes } = this.props.products;\n    const availableColors = productAtrributes\n      .filter((attr: IAttributeProductValue) => attr.attribute_name === 'Color')\n      .map((attr: IAttributeProductValue) => attr.attribute_value);\n    return availableColors;\n  }\n\n  get haveDiscounted (): boolean {\n    const { productDetail } = this.props.products;\n    if (!productDetail) {\n      return false;\n    }\n    return parseFloat(productDetail.discounted_price) > 0;\n  }\n\n  public addCartItem = () => {\n    const { productDetail } = this.props.products;\n    if (productDetail) {\n      const attributes = Object.keys(this.state.attributes).map(\n        (key) => this.state.attributes[key]\n      );\n      this.props.dispatch(actionAddCartItem(productDetail, attributes, this.state.quantity));\n      this.props.enqueueSnackbar(\n        <span>\n          <strong>{productDetail.name}</strong> was added to cart!\n        </span>,\n        {\n          variant: 'success',\n          preventDuplicate: true\n        }\n      );\n    }\n  }\n\n  public quantityChangeHandler = (quantity: number) => {\n    this.setState({ quantity });\n  }\n\n  public productImageChangeHandler = (productImage: string) => () => {\n    this.setState({ productImage });\n  }\n\n  public colorChangeHandler = (color: string) => {\n    setTimeout(() => {\n      const { productAtrributes } = this.props.products;\n      const attributes = { ...this.state.attributes };\n      const colorAttributeValue = productAtrributes.find(\n        (attr) => attr.attribute_name === 'Color' && attr.attribute_value === color\n      );\n      if (colorAttributeValue) {\n        const attrColor = { ...colorAttributeValue };\n        attributes[colorAttributeValue.attribute_name] = attrColor;\n        this.setState({ attributes });\n      }\n    }, 1);\n  }\n\n  public sizeChangeHandler = (size: string) => {\n    const { productAtrributes } = this.props.products;\n    const attributes = { ...this.state.attributes };\n    const sizeAttributeValue = productAtrributes.find(\n      (attr) => attr.attribute_name === 'Size' && attr.attribute_value === size\n    );\n    if (sizeAttributeValue) {\n      const attrSize = { ...sizeAttributeValue };\n      attributes[sizeAttributeValue.attribute_name] = attrSize;\n      this.setState({ attributes });\n    }\n  }\n\n  public render () {\n    const { productDetail } = this.props.products;\n    const { productCategories } = this.props.categories;\n    if (!productDetail) {\n      // TODO: Return shimmer plaveholder here.\n      return null;\n    }\n    const catName = productCategories.length ? productCategories[0].name : '';\n    const { name, image, image_2, thumbnail, price, discounted_price } = productDetail;\n\n    return (\n      <Card className='border-0'>\n        <Container>\n          <Row>\n            <Col md={6}>\n              <Container className='p-4 w-100 h-100'>\n                <div\n                  className='w-100 h-100'\n                  style={{\n                    backgroundImage: `url(${CDN_ROOT}${this.state.productImage})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                  }}\n                />\n              </Container>\n            </Col>\n            <Col md={6}>\n              <Card.Body>\n                <Breadcrumb className='mt-2 text-muted'>\n                  <Breadcrumb.Item href='/'>Home</Breadcrumb.Item>\n                  <Breadcrumb.Item href='/'>All Categories</Breadcrumb.Item>\n                  {catName ? <Breadcrumb.Item active>{catName}</Breadcrumb.Item> : null}\n                </Breadcrumb>\n                <Rating\n                  initialRating={3.5}\n                  emptySymbol={<IconStarBorder className='text-warning' />}\n                  fullSymbol={<IconStar className='text-warning' />}\n                  className='mb-3'\n                />\n                <Card.Title as='h4'>{name}</Card.Title>\n                <Card.Text as='h3' className='mt-4 mb-4'>\n                  <span className='text-danger pr-3'>\n                    ${this.haveDiscounted ? discounted_price : price}\n                  </span>\n                  {this.haveDiscounted ? (\n                    <sup>\n                      <del>${price}</del>\n                    </sup>\n                  ) : null}\n                </Card.Text>\n\n                <h6 className='text-muted mb-2'>Color</h6>\n                <CompColorPicker\n                  colors={this.availableColors}\n                  onColorChange={this.colorChangeHandler}\n                />\n\n                <h6 className='text-muted mt-4 mb2'>Size</h6>\n                <CompSizePicker\n                  sizes={this.availableSizes}\n                  onSizeChange={this.sizeChangeHandler}\n                />\n\n                <h6 className='text-muted mt-4 mb2'>Quantity</h6>\n                <CompQuantityInput\n                  value={this.state.quantity}\n                  max={10}\n                  min={1}\n                  step={1}\n                  onChange={this.quantityChangeHandler}\n                />\n              </Card.Body>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <Container className='p-4'>\n                <Row>\n                  <Col className='d-lg-none d-xl-none col d-md-none'>\n                    <Card.Img src={`${CDN_ROOT}${this.state.productImage}`} />\n                  </Col>\n                </Row>\n                <Row className='justify-content-center'>\n                  {/* TODO: Adding support for dynamic images here  */}\n                  {[image, image_2, thumbnail].map((img) => (\n                    <Button\n                      variant='dark'\n                      size='lg'\n                      style={{\n                        margin: '0.225rem',\n                        width: '5rem',\n                        height: '5rem',\n                        backgroundImage: `url(${CDN_ROOT}${img})`,\n                        backgroundPosition: 'center',\n                        backgroundSize: 'contain',\n                        backgroundRepeat: 'no-repeat'\n                      }}\n                      onClick={this.productImageChangeHandler(img)}\n                    />\n                  ))}\n                </Row>\n              </Container>\n            </Col>\n            <Col md={3}>\n              <Card.Body>\n                <Button\n                  variant='danger'\n                  size='lg'\n                  className='rounded-pill'\n                  onClick={this.addCartItem}>\n                  Add to cart\n                </Button>\n              </Card.Body>\n            </Col>\n            <Col md={3}>\n              <Card.Body>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      icon={<FavoriteBorder />}\n                      checkedIcon={<Favorite />}\n                      value='checkedH'\n                      className='text-danger'\n                    />\n                  }\n                  label='Add to Wish List'\n                />\n              </Card.Body>\n            </Col>\n          </Row>\n        </Container>\n        <CompProductReviewSession productId={productDetail.product_id} />\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    products: state.Products,\n    categories: state.Categories\n  };\n};\n\nexport default connect(mapStateToProps)(withSnackbar(ProductPage));\n","import React from 'react';\nimport { ButtonGroup, ButtonToolbar, Pagination } from 'react-bootstrap';\n\ninterface IPaginationBarProps {\n  count: number;\n  page: number;\n  limit: number;\n  showCount: number;\n  onPage?: (p: number) => void;\n}\n\nexport default function CompPaginationBar (props: IPaginationBarProps) {\n  const pageCount = Math.ceil(props.count / props.limit);\n  const showCount = Math.min(props.showCount, pageCount);\n  const page = props.page;\n  const items = Array.from(Array(pageCount + 1).keys()).slice(1);\n  let leftEllipsis = false;\n  let rightEllipsis = false;\n  while (items.length > showCount) {\n    if (items[items.length - 2] > page) {\n      items.splice(-2, 1);\n      rightEllipsis = true;\n    }\n    if (items[1] < page && items.length > showCount) {\n      items.splice(1, 1);\n      leftEllipsis = true;\n    }\n  }\n  if (leftEllipsis) {\n    items.splice(1, 0, -1);\n  }\n  if (rightEllipsis) {\n    items.splice(-1, 0, -1);\n  }\n\n  return (\n    <Pagination>\n      <Pagination.First onClick={() => props.onPage && props.onPage(1)} />\n      {items.map((p, index) => {\n        return p > 0 ? (\n          <Pagination.Item\n            style={{ boxShadow: 'none' }}\n            onClick={() => props.onPage && props.onPage(p)}\n            active={p === page}>\n            {p}\n          </Pagination.Item>\n        ) : (\n          <Pagination.Ellipsis disabled />\n        );\n      })}\n      <Pagination.Last onClick={() => props.onPage && props.onPage(pageCount)} />\n    </Pagination>\n  );\n}\n","import * as React from 'react';\nimport { Card, CardDeck, Col, Container, Row } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { DispatchProp } from 'react-redux';\nimport CompColorPicker from '../components/CompColorPicker';\nimport CompPaginationBar from '../components/CompPaginationBar';\nimport CompProductCard from '../components/CompProductCard';\nimport CompSizePicker from '../components/CompSizePicker';\nimport { actionGetProducts } from '../models/actions';\nimport { IRootState } from '../models/reducers';\nimport { IProductState } from '../models/reducers/Products';\nimport { IProduct } from '../models/schemas';\nimport { arrayChunks } from '../utils';\n\ninterface ISearchPageProps extends DispatchProp {\n  products: IProductState;\n}\nclass SearchPage extends React.Component<ISearchPageProps> {\n  public componentWillMount () {\n    this.props.dispatch(actionGetProducts());\n  }\n  public render () {\n    const products = this.props.products;\n    const rows = arrayChunks(products.products.rows, 3);\n    return (\n      <Container>\n        <Row>\n          <Col md={3}>\n            <Container>\n              <Card className='bg-light mt-4 p-4 rounded-0'>\n                <Card.Title as='h6'>Filters {products.products.count} items</Card.Title>\n              </Card>\n              <Card className='p-4 rounded-0  d-block'>\n                <Card.Title as='h6' className='text-muted'>\n                  Color\n                </Card.Title>\n                <CompColorPicker colors={['red', 'green', 'blue']} />\n                <Card.Title as='h6' className='text-muted'>\n                  Size\n                </Card.Title>\n                <CompSizePicker sizes={['XS', 'S', 'M', 'L', 'XL']} />\n\n                <Button variant='danger' size='sm' className='d-block rounded-pill'>\n                  Apply\n                </Button>\n              </Card>\n            </Container>\n          </Col>\n          <Col md={9}>\n            <Container>\n              <Row>\n                <Col md={12}>\n                  {rows.map((items) => (\n                    <CardDeck className='p-4'>\n                      {items.map((product: IProduct) => (\n                        <CompProductCard product={product} />\n                      ))}\n                    </CardDeck>\n                  ))}\n                </Col>\n              </Row>\n              <Row>\n                <Col md={12}>\n                  <Container className='d-flex justify-content-end p-4'>\n                    <CompPaginationBar\n                      limit={products.limit}\n                      count={products.products.count}\n                      page={products.page}\n                      showCount={5}\n                      onPage={(page) => this.props.dispatch(actionGetProducts(page))}\n                    />\n                  </Container>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default connect((state: IRootState) => {\n  return {\n    products: state.Products\n  };\n})(SearchPage);\n","import React, { Component } from 'react';\n\nimport { Container } from 'react-bootstrap';\nimport { connect, DispatchProp } from 'react-redux';\nimport { Route, RouteComponentProps, withRouter } from 'react-router-dom';\nimport CompCartDialog from './components/CompCartDialog';\nimport CompFooterNav from './components/CompFooterNav';\nimport CompLoginDialog from './components/CompLoginDialog';\nimport CompRegisterDialog from './components/CompRegisterDialog';\nimport CompTopNavBar from './components/CompTopNavBar';\nimport { actionGetCategories } from './models/actions';\nimport HomePage from './routers/HomePage';\nimport ProductPage from './routers/ProductPage';\nimport SearchPage from './routers/SearchPage';\n\ninterface IAppProps extends DispatchProp, RouteComponentProps {}\n\nclass App extends Component<IAppProps> {\n  public componentWillMount () {\n    this.props.dispatch(actionGetCategories());\n  }\n\n  public componentDidUpdate (prevProps: IAppProps) {\n    const locationChanged = this.props.location !== prevProps.location;\n    if (locationChanged) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  public render () {\n    return (\n      <Container className='border-left border-right p-0'>\n        <CompTopNavBar />\n        <Route exact path='/' component={HomePage} />\n        <Route exact path='/product/:id' component={ProductPage} />\n        <Route exact path='/search' component={SearchPage} />\n        <CompFooterNav />\n        <CompLoginDialog />\n        <CompRegisterDialog />\n        <CompCartDialog />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(connect()(App));\n","import Cart from './Cart';\nimport Categories, { ICategoriesState } from './Categories';\nimport Customer from './Customer';\nimport Products, { IProductState } from './Products';\n\nimport { combineReducers } from 'redux';\nimport { ICustomer } from '../schemas';\nimport Dialogs, { IDialogState } from './Dialogs';\n\nexport interface IRootState {\n  Cart: any;\n  Categories: ICategoriesState;\n  Customer: ICustomer;\n  Products: IProductState;\n  Dialogs: IDialogState;\n}\n\nconst rootReducer = combineReducers({\n  Cart,\n  Categories,\n  Customer,\n  Products,\n  Dialogs\n});\n\nexport default rootReducer;\n","import { ActionTypes } from '..';\nimport { IAction, IAttributeProductValue, ICartItem, IProductDetail } from '../schemas';\n\nexport interface ICartState {\n  items: {\n    [index: string]: ICartItem;\n  };\n  total: number;\n}\n\nexport default function Cart (\n  state = {\n    items: {},\n    total: 0\n  } as ICartState,\n  action: IAction\n): ICartState {\n  const { type, params } = action;\n  switch (type) {\n    case ActionTypes.ADD_CART_ITEM: {\n      const { product, attributes, quantity } = params as ICartItem;\n      const itemId = JSON.stringify({\n        id: product.product_id,\n        attr: attributes.map((attr) => attr.attribute_value)\n      });\n      const price = parseFloat(product.discounted_price) || parseFloat(product.price);\n      const subtotal = quantity * price;\n      const newState = { ...state };\n      if (newState.items[itemId]) {\n        newState.items[itemId].quantity += quantity;\n        newState.items[itemId].subtotal += subtotal;\n      } else {\n        newState.items[itemId] = {\n          product,\n          attributes,\n          quantity,\n          itemId,\n          subtotal\n        };\n      }\n      newState.total = 0;\n      Object.keys(newState.items).forEach((key) => {\n        newState.total += newState.items[key].subtotal;\n      });\n      return newState;\n    }\n\n    case ActionTypes.REMOVE_CART_ITEM: {\n      const { itemId } = params;\n      if (state.items[itemId]) {\n        const newState = { ...state };\n        delete newState.items[itemId];\n        newState.total = 0;\n        Object.keys(newState.items).forEach((key) => {\n          newState.total += newState.items[key].subtotal;\n        });\n        return newState;\n      }\n    }\n\n    case ActionTypes.UPDATE_CART_ITEM: {\n      const { itemId, quantity } = params;\n      if (state.items[itemId]) {\n        const newState = { ...state };\n        const product = newState.items[itemId].product;\n        const price = parseFloat(product.discounted_price) || parseFloat(product.price);\n        newState.items[itemId].quantity = quantity;\n        newState.items[itemId].subtotal = quantity * price;\n        newState.total = 0;\n        Object.keys(newState.items).forEach((key) => {\n          newState.total += newState.items[key].subtotal;\n        });\n        return newState;\n      }\n    }\n\n    case ActionTypes.CHECKOUT_CART: {\n      return {\n        total: 0,\n        items: {}\n      };\n    }\n  }\n  return state;\n}\n","import { ActionTypes } from '..';\nimport { IAction, ICategoriesList, ICategory, IProductCategoryInfo } from '../schemas';\n\nexport interface ICategoriesState {\n  categories: ICategoriesList;\n  limit: number;\n  page: number;\n  categoriesDict: {\n    [index: number]: ICategory;\n  };\n  productCategories: ICategory[];\n  fetchingCount: number;\n}\n\nexport default function Categories (\n  state = {\n    categories: { count: 0, rows: [] },\n    page: 1,\n    limit: 20,\n    categoriesDict: {},\n    productCategories: [],\n    fetchingCount: 0\n  } as ICategoriesState,\n  action: IAction\n): ICategoriesState {\n  const { type, params } = action;\n  switch (type) {\n    case ActionTypes.GET_CATEGORIES:\n      if (params.isFetching) {\n        return {\n          ...state,\n          fetchingCount: state.fetchingCount + 1\n        };\n      }\n      const newState = {\n        ...state,\n        fetchingCount: state.fetchingCount - 1\n      };\n      if (params.success) {\n        const { limit, page, data } = params;\n        newState.limit = limit;\n        newState.page = page;\n        newState.categories = data;\n        // Update categories dictionary.\n        newState.categories.rows.forEach((category) => {\n          newState.categoriesDict[category.category_id] = category;\n        });\n      }\n      return newState;\n    case ActionTypes.GET_PRODUCT_CATEGORIES:\n      if (params.success) {\n        return {\n          ...state,\n          productCategories: params.data.map(\n            (cat: IProductCategoryInfo) => state.categoriesDict[cat.category_id]\n          )\n        };\n      }\n      break;\n  }\n  return state;\n}\n","import { ActionTypes } from '..';\nimport { IAction, ICustomer } from '../schemas';\n\nexport default function Customer(state = {} as ICustomer, action: IAction): ICustomer {\n  const { type, params } = action;\n  switch (type) {\n    case ActionTypes.CUSTOMER_LOGIN: {\n      return {\n        ...state,\n        ...params\n      };\n    }\n    case ActionTypes.CUSTOMER_LOGOUT: {\n      return {} as ICustomer;\n    }\n  }\n  return state;\n}\n","import { ActionTypes } from '..';\nimport {\n  IAction,\n  IAttributeProductValue,\n  IProduct,\n  IProductComplete,\n  IProductDetail,\n  IProductList,\n  IReview\n} from '../schemas';\n\nexport interface IProductDetailDict {\n  [index: number]: IProductComplete;\n}\nexport interface IProductState {\n  products: IProductList;\n  productDetail: IProductComplete | null;\n  productAtrributes: IAttributeProductValue[];\n  productReviews: IReview[];\n  page: number;\n  limit: number;\n  promotion: IProduct | null;\n  fetchingCount: number;\n}\n\nexport default function Products (\n  state = {\n    products: {\n      count: 0,\n      rows: []\n    },\n    productDetail: null,\n    productAtrributes: [],\n    productReviews: [],\n    page: 1,\n    limit: 20,\n    promotion: null,\n    fetchingCount: 0\n  } as IProductState,\n  action: IAction\n): IProductState {\n  const { type, params } = action;\n  switch (type) {\n    case ActionTypes.GET_PRODUCTS:\n      if (params.isFetching) {\n        return {\n          ...state,\n          fetchingCount: state.fetchingCount + 1\n        };\n      }\n      const newState = {\n        ...state,\n        fetchingCount: state.fetchingCount - 1\n      };\n      if (params.success) {\n        const { limit, page, data } = params;\n        newState.limit = limit;\n        newState.page = page;\n        newState.products = data;\n        // Pick a product to promotion.\n        // TODO: need to be manage by backend.\n        if (newState.products.rows.length) {\n          newState.promotion = newState.products.rows[0];\n        }\n      }\n      return newState;\n    case ActionTypes.GET_PRODUCT_DETAILS:\n      if (params.success) {\n        return {\n          ...state,\n          productDetail: params.data\n        };\n      }\n      break;\n    case ActionTypes.GET_PRODUCT_ATTRIBUTES:\n      if (params.success) {\n        return {\n          ...state,\n          productAtrributes: params.data\n        };\n      }\n      break;\n\n    case ActionTypes.GET_PRODUCT_REVIEWS:\n      if (params.success) {\n        return {\n          ...state,\n          productReviews: params.data\n        };\n      }\n      break;\n  }\n  return state;\n}\n","import { ActionTypes } from '..';\nimport { IAction } from '../schemas';\n\nexport interface IDialogProps {\n  show?: boolean;\n  message?: string;\n  error?: string;\n  requesting?: boolean;\n}\n\nexport interface IDialogState {\n  [index: string]: IDialogProps;\n}\n\nexport default function Dialogs (\n  state = {} as IDialogState,\n  action: IAction\n): IDialogState {\n  const { type, params } = action;\n  switch (type) {\n    case ActionTypes.MODAL_DIALOG: {\n      const {name, ...props}  = params;\n      const dialogProps  = {\n        show: false,\n        message: '',\n        error: '',\n        requesting: false,\n        ...props\n      };\n      return {\n        ...state,\n        [name]: dialogProps\n      };\n    }\n  }\n  return state;\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxPromise from 'redux-promise';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst dataStore = createStore(rootReducer, composeWithDevTools(applyMiddleware(reduxThunk, reduxPromise)));\n\nexport default dataStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { DataProvider } from './models';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\nReactDOM.render(\n  <DataProvider>\n    <Router>\n      <SnackbarProvider\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n        action={[\n          <Button variant='link' className='text-light' size='sm'>\n            {'Dismiss'}\n          </Button>\n        ]}\n        autoHideDuration={2000}\n        maxSnack={1}>\n        <App />\n      </SnackbarProvider>\n    </Router>\n  </DataProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport dataStore from './dataStore';\n\nexport default function DataProvider (props: any) {\n  return <Provider store={dataStore}>\n  {props.children}\n  </Provider>;\n}\n"],"sourceRoot":""}